!(function (e, t) {
    "use strict";
    var n = (function () {
        var n,
            o,
            r,
            i,
            s,
            a,
            l,
            c,
            d,
            u,
            p,
            m,
            v,
            f,
            h,
            y,
            L,
            b,
            E = 0,
            g = !1,
            N = null,
            k = [],
            S = !1,
            w = !1,
            q = !1,
            M = {
                container: "body",
                volume: 0.5,
                autoPlay: !1,
                notification: !1,
                playList: [],
                layout: "stacked",
                shuffle: !0,
                loop: !0,
                customIcons: {},
                showVolume: !0,
                themeColor: "#e07a0c",
            };
        function A(e) {
            if ((e.preventDefault(), "pl-title" === e.target.className)) {
                var t = parseInt(
                    e.target.parentNode.getAttribute("data-track"),
                    10
                );
                (E = t), T();
            } else
                for (var n = e.target; n.className !== L.className; ) {
                    if ("pl-remove" === n.className) {
                        var o = parseInt(
                            n.parentNode.getAttribute("data-track"),
                            10
                        );
                        return (
                            f.splice(o, 1),
                            n.parentNode.parentNode.removeChild(n.parentNode),
                            (b = L.querySelectorAll("li")),
                            [].forEach.call(b, function (e, t) {
                                e.setAttribute("data-track", t);
                            }),
                            m.paused
                                ? x()
                                    ? z()
                                    : ((m.src = f[E].file), (c.style.width = 0))
                                : o === E && T(),
                            void (o < E && E--)
                        );
                    }
                    n = n.parentNode;
                }
        }
        function C() {
            !x() && H();
        }
        function T() {
            (E = E > f.length - 1 ? 0 : E) < 0 && (E = f.length - 1),
                x()
                    ? z()
                    : (k.push(E),
                      (m.src = f[E].file),
                      (m.preload = "auto"),
                      m.play());
        }
        function I() {
            (E = k.length > 1 ? k.splice(-2)[0] : 0), T();
        }
        function H(e) {
            if (N) {
                if (0 === N.length) {
                    if (!g && !e) return void m.pause();
                    N = [...Array(f.length).keys()];
                }
                let t = Math.floor(Math.random() * N.length);
                E = N.splice(t, 1)[0];
            } else {
                if (E === f.length - 1 && !g && !e)
                    return m.pause(), void o.classList.remove("playing");
                E = E === f.length - 1 ? 0 : E + 1;
            }
            T();
        }
        function x() {
            return 0 === f.length;
        }
        function z() {
            m.pause(),
                (m.src = ""),
                (u.innerHTML = "--"),
                (p.innerHTML = "--"),
                (c.style.width = 0),
                (d.style.width = 0),
                (v.innerHTML = '<div class="pl-empty">PlayList is empty</div>'),
                (v.style.textAlign = "center");
        }
        function P() {
            x() || (m.paused ? m.play() : m.pause());
        }
        function O() {
            m.muted
                ? (0 === parseInt(y, 10)
                      ? ((h.style.width = "100%"), (m.volume = 1))
                      : (h.style.width = y),
                  (m.muted = !1),
                  this.classList.remove("muted"))
                : ((m.muted = !0),
                  (h.style.width = 0),
                  this.classList.add("muted"));
        }
        function _() {
            var e = this.classList;
            e.contains("mp-active")
                ? ((g = !1), e.remove("mp-active"))
                : ((g = !0), e.add("mp-active"));
        }
        function j() {
            var e = this.classList;
            e.contains("mp-active")
                ? ((N = null), e.remove("mp-active"))
                : ((N = [...Array(f.length).keys()]), e.add("mp-active"));
        }
        function X(e) {
            if ("string" == typeof e.type) {
                const t = document.createElement(e.type);
                for (const n in e.props)
                    if ("children" === n)
                        if (Array.isArray(e.props.children))
                            e.props.children.forEach((e) => {
                                const n = X(e);
                                t.appendChild(n);
                            });
                        else if ("object" == typeof e.props.children) {
                            const n = X(e.props.children);
                            t.appendChild(n);
                        } else t.innerHTML = e.props.children;
                    else
                        "className" === n
                            ? t.setAttribute("class", e.props[n])
                            : t.setAttribute(n, e.props[n]);
                return t;
            }
            if (e.nodeName) return e;
        }
        function Y(e = "div", t = [], n = "", o) {
            const r = document.createElement(e);
            return (
                Array.isArray(t) && t.length && r.classList.add(...t),
                n && (r.innerHTML = n),
                o ? (o.appendChild(r), o) : r
            );
        }
        function B() {
            if (0 !== m.readyState) {
                var e = Math.round(m.currentTime * (100 / m.duration));
                c.style.width = e + "%";
                var t = Math.floor(m.currentTime / 60),
                    n = Math.floor(m.currentTime - 60 * t),
                    o = Math.floor(m.duration / 60),
                    r = Math.floor(m.duration - 60 * o);
                n < 10 && (n = "0" + n),
                    r < 10 && (r = "0" + r),
                    (u.innerHTML = t + ":" + n),
                    (p.innerHTML = o + ":" + r);
                var i = m.buffered;
                if (i.length) {
                    var s = Math.round((100 * i.end(0)) / m.duration);
                    d.style.width = s + "%";
                }
            }
        }
        function V() {
            H(!1);
        }
        function D(t, n, o) {
            var r;
            if ("horizontal" === o)
                return (
                    (r = Math.round(
                        (100 * (t.clientX - n.offset().left + e.pageXOffset)) /
                            n.parentNode.offsetWidth
                    )),
                    (n.style.width = r + "%"),
                    r
                );
            var i = n.offset().top + n.offsetHeight - e.pageYOffset;
            return (
                (r = Math.round(i - t.clientY)) > 100 && (r = 100),
                r < 0 && (r = 0),
                (h.style.height = r + "%"),
                r
            );
        }
        function R(e) {
            (w = 3 === e.which), (S = !0), $(e);
        }
        function W(e) {
            (w = 3 === e.which), (S = !0), G(e);
        }
        function $(e) {
            if (S && !1 === w && 0 !== m.readyState) {
                var t = D(e, c, "horizontal");
                m.currentTime = m.duration * (t / 100);
            }
        }
        function F() {
            S = !1;
        }
        function G(e) {
            if (((y = h.css("width")), S && !1 === w)) {
                var t = D(e, h, "horizontal") / 100;
                t <= 0
                    ? ((m.volume = 0), l.classList.add("muted"))
                    : (m.muted && (m.muted = !1),
                      (m.volume = t),
                      l.classList.remove("muted"));
            }
        }
        return (
            (Element.prototype.offset = function () {
                var t = this.getBoundingClientRect(),
                    n = e.pageXOffset || document.documentElement.scrollLeft,
                    o = e.pageYOffset || document.documentElement.scrollTop;
                return {top: t.top + o, left: t.left + n};
            }),
            (Element.prototype.css = function (e) {
                if ("string" == typeof e) return getComputedStyle(this, "")[e];
                if ("object" == typeof e)
                    for (var n in e)
                        this.style[n] !== t && (this.style[n] = e[n]);
            }),
            {
                init: function (e) {
                    if (
                        ((function () {
                            const e =
                                "https://fonts.googleapis.com/icon?family=Material+Icons";
                            if (
                                document.head.querySelector(`link[href="${e}"]`)
                            )
                                return;
                            const t = document.createElement("link");
                            (t.rel = "stylesheet"),
                                (t.href = e),
                                document.head.prepend(t);
                        })(),
                        !("classList" in document.documentElement))
                    )
                        return !1;
                    if (
                        ((n = (function (e, n) {
                            var o = document.createElement(e);
                            if (n) for (var r in n) o[r] !== t && (o[r] = n[r]);
                            return o;
                        })("div", {
                            className: "mp",
                            id: "mp",
                            innerHTML:
                                '<div class="mp-inner-panel">\n            <div class="mp-item mp--track">\n                <div class="mp-info">\n                    <div class="mp-progress-container">\n                    <span class="mp-time--current">--</span>\n                        <div class="mp-progress">\n                            <div class="mp-bar"></div>\n                            <div class="mp-preload-bar"></div>\n                        </div>\n                        <span class="mp-time--duration">--</span>\n                    </div>\n                </div>\n            </div>\n\n            <div class="mp-control-section mp-settings">\n                <div class="mp-item mp--repeat-shuffle">\n                    <button class="mp-controls mp-repeat-btn">\n                        <i class="icon material-icons">repeat</i>\n                    </button>\n                    <button class="mp-controls mp-shuffle-btn">\n                        <i class="icon material-icons">shuffle</i>\n                    </button>\n                </div>\n\n                <div class="mp-item mp--playback">\n                    <button class="mp-controls mp-prev-btn"></button>\n                    <button class="mp-controls mp-toggle-btn"></button>\n                    <button class="mp-controls mp-next-btn"></button>\n                </div>\n\n                <div class="mp-item mp--settings mp-volume-container">\n                    <div class="mp-volume-btns">\n                        <button class="mp-controls mp-volume-btn">\n                            <i class="icon material-icons mp--volume-on"\n                                >volume_up</i\n                            >\n                            <i class="icon material-icons mp--volume-off"\n                                >volume_off</i\n                            >\n                        </button>\n                        <div class="mp-volume">\n                            <div class="mp-volume-progress">\n                                <div class="mp-volume-bar"></div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>',
                        })),
                        !q && null !== n)
                    ) {
                        if (
                            ((M = (function (e, t) {
                                for (var n in t)
                                    e.hasOwnProperty(n) && (e[n] = t[n]);
                                return e;
                            })(M, e)),
                            document
                                .querySelector(M.container)
                                .insertBefore(n, null),
                            (v = n.querySelector(".mp-inner-panel")),
                            (o = n.querySelector(".mp-toggle-btn")),
                            (r = n.querySelector(".mp-prev-btn")),
                            (i = n.querySelector(".mp-next-btn")),
                            (s = n.querySelector(".mp-repeat-btn")),
                            (a = n.querySelector(".mp-shuffle-btn")),
                            (l = n.querySelector(".mp-volume-btn")),
                            (u = n.querySelector(".mp-time--current")),
                            (p = n.querySelector(".mp-time--duration")),
                            (c = n.querySelector(".mp-bar")),
                            (d = n.querySelector(".mp-preload-bar")),
                            (h = n.querySelector(".mp-volume-bar")),
                            (f = M.playList),
                            o.addEventListener("click", P),
                            l.addEventListener("click", O),
                            s.addEventListener("click", _),
                            a.addEventListener("click", j),
                            c.parentNode.parentNode.addEventListener(
                                "mousedown",
                                R
                            ),
                            c.parentNode.parentNode.addEventListener(
                                "mousemove",
                                $
                            ),
                            document.documentElement.addEventListener(
                                "mouseup",
                                F
                            ),
                            h.parentNode.parentNode.addEventListener(
                                "mousedown",
                                W
                            ),
                            h.parentNode.parentNode.addEventListener(
                                "mousemove",
                                G
                            ),
                            document.documentElement.addEventListener(
                                "mouseup",
                                F
                            ),
                            r.addEventListener("click", I),
                            i.addEventListener("click", H),
                            f.length <= 1 &&
                                (i.setAttribute("disabled", !0),
                                r.setAttribute("disabled", !0)),
                            (q = !0),
                            !M.shuffle)
                        ) {
                            const e = n.querySelector(".mp--repeat-shuffle");
                            if (e) {
                                const t = e.querySelector(".mp-shuffle-btn");
                                e.removeChild(t);
                            }
                        }
                        if (!M.loop) {
                            const e = n.querySelector(".mp--repeat-shuffle");
                            if (e) {
                                const t = e.querySelector(".mp-repeat-btn");
                                e.removeChild(t);
                            }
                        }
                        if (!M.showVolume) {
                            const e = n.querySelector(".mp-volume-container");
                            if (e) {
                                const t = e.querySelector(".mp-volume-btns");
                                e.removeChild(t);
                            }
                        }
                        if (
                            ((function () {
                                const e = Y(
                                        "i",
                                        ["icon", "material-icons"],
                                        "skip_previous"
                                    ),
                                    t = Y(
                                        "i",
                                        ["icon", "material-icons", "mp--play"],
                                        "play_arrow"
                                    ),
                                    n = Y(
                                        "i",
                                        ["icon", "material-icons", "mp--pause"],
                                        "pause"
                                    ),
                                    s = Y(
                                        "i",
                                        ["icon", "material-icons"],
                                        "skip_next"
                                    );
                                [
                                    ["prev", e],
                                    ["next", s],
                                    ["play", t],
                                    ["pause", n],
                                ].forEach(([e, t]) => {
                                    if (M.customIcons[e]) {
                                        const t = {
                                            pause: ["icon", "mp--pause"],
                                            play: ["icon", "mp--play"],
                                            next: ["icon"],
                                            prev: ["icon"],
                                        }[e];
                                        if (t) {
                                            let n = M.customIcons[e];
                                            if (
                                                "function" != typeof n &&
                                                "object" != typeof n
                                            )
                                                return;
                                            "function" == typeof n &&
                                                (n = M.customIcons[e]());
                                            const o = X(n);
                                            o &&
                                                (o.classList.add(...t),
                                                (M.customIcons[e] = o));
                                        }
                                    } else M.customIcons[e] = t;
                                }),
                                    r.appendChild(M.customIcons.prev),
                                    i.appendChild(M.customIcons.next),
                                    o.appendChild(M.customIcons.pause),
                                    o.appendChild(M.customIcons.play);
                            })(),
                            (function () {
                                switch (M.layout) {
                                    case "stacked":
                                    default:
                                        return v.classList.add("stacked");
                                    case "stacked-reverse":
                                        return v.classList.add(
                                            "stacked-reverse"
                                        );
                                    case "horizontal":
                                        return v.classList.add("horizontal");
                                    case "horizontal-reverse":
                                        v.classList.add("horizontal-reverse");
                                }
                            })(),
                            ((m = new Audio()).volume = M.volume),
                            x())
                        )
                            z();
                        else {
                            if (M.themeColor) {
                                document
                                    .querySelector(":root")
                                    .style.setProperty(
                                        "--theme-color",
                                        M.themeColor
                                    );
                            }
                            (m.src = f[E].file),
                                (m.preload = "auto"),
                                m.addEventListener("error", C, !1),
                                m.addEventListener("timeupdate", B, !1),
                                m.addEventListener("ended", V, !1),
                                m.addEventListener(
                                    "play",
                                    () => {
                                        o.classList.add("playing");
                                    },
                                    !1
                                ),
                                m.addEventListener(
                                    "pause",
                                    () => {
                                        o.classList.remove("playing");
                                    },
                                    !1
                                ),
                                M.autoPlay &&
                                    (m.play(),
                                    Array.isArray(b) &&
                                        b[E].classList.add("pl-current")),
                                setTimeout(() => {
                                    !(function () {
                                        if (!isNaN(m.duration)) {
                                            var e = Math.floor(m.duration / 60),
                                                t = Math.floor(
                                                    m.duration - 60 * e
                                                );
                                            p.innerHTML = e + ":" + t;
                                        }
                                    })();
                                }, 100);
                        }
                    }
                },
                destroy: function () {
                    q &&
                        (o.removeEventListener("click", P),
                        l.removeEventListener("click", O),
                        s.removeEventListener("click", _),
                        c.parentNode.parentNode.removeEventListener(
                            "mousedown",
                            R
                        ),
                        c.parentNode.parentNode.removeEventListener(
                            "mousemove",
                            $
                        ),
                        document.documentElement.removeEventListener(
                            "mouseup",
                            F
                        ),
                        h.parentNode.parentNode.removeEventListener(
                            "mousedown",
                            W
                        ),
                        h.parentNode.parentNode.removeEventListener(
                            "mousemove",
                            G
                        ),
                        document.documentElement.removeEventListener(
                            "mouseup",
                            F
                        ),
                        r.removeEventListener("click", I),
                        i.removeEventListener("click", H),
                        m.removeEventListener("error", C),
                        m.removeEventListener("timeupdate", B),
                        m.removeEventListener("ended", V),
                        n.parentNode.removeChild(n),
                        L.removeEventListener("click", A),
                        L.parentNode.removeChild(L),
                        m.pause(),
                        (q = !1));
                },
            }
        );
    })();
    e.AudioPlayer = n;
})(window);
